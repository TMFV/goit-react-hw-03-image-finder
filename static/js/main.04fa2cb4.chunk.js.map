{"version":3,"sources":["Searchbar/Searchbar.jsx","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","Button/Button.js","Modal/Modal.js","App.js","index.js"],"names":["Searchbar","className","onSubmit","event","props","type","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","onClick","e","modalFn","target","attributes","value","console","log","src","this","imageLink","alt","imageAlt","data-large","largeImageURL","defaultProps","ImageGallery","loader","imagesArray","map","image","idx","webformatURL","imagAlt","tags","id","propTypes","array","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","fn","modalRoot","querySelector","Modal","handleKeyDown","code","closeFn","handleBackdrope","currentTarget","addEventListener","removeEventListener","createPortal","children","App","state","searchWords","images","showModal","modalImage","showLoader","currentPage","toggleModal","setState","pushImagesToState","response","newSearchArray","imagesFromResponse","data","hits","setModalImage","linkImg","openLargeImage","loaderToggle","bool","searchFormSubmit","preventDefault","searchWordsValue","getImages","loadMoreFn","words","page","axios","get","then","prevState","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.04fa2cb4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\n\nclass Searchbar extends Component {\n  static propTypes = { onSubmit: propTypes.func };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form\n          className=\"SearchForm\"\n          onSubmit={(event) => this.props.onSubmit(event)}\n        >\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\n\nclass ImageGalleryItem extends Component {\n  static defaultProps = { imageLink: \" \", imageAlt: \" \" };\n\n  static propTypes = {\n    imageLink: propTypes.string,\n    imageAlt: propTypes.string,\n    largeImageURL: propTypes.string,\n    modalFn: propTypes.func,\n  };\n\n  render() {\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={(e) => {\n            this.props.modalFn(e.target.attributes[2].value);\n            console.log(e);\n          }}\n          src={this.props.imageLink}\n          alt={this.props.imageAlt}\n          data-large={this.props.largeImageURL}\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import React, { Component } from \"react\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport propTypes from \"prop-types\";\n\nclass ImageGallery extends Component {\n  static defaultProps = { imagesArray: propTypes.array };\n  static propTypes = {\n    loader: propTypes.func,\n    imagesArray: propTypes.array,\n    modalFn: propTypes.func,\n  };\n  componentDidMount() {\n    this.props.loader(true);\n  }\n\n  render() {\n    return (\n      <ul className=\"ImageGallery\">\n        {this.props.imagesArray.map((image, idx) => {\n          return (\n            <ImageGalleryItem\n              key={image.id}\n              imageLink={image.webformatURL}\n              imagAlt={image.tags}\n              largeImageURL={image.largeImageURL}\n              modalFn={this.props.modalFn}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\n\nclass Button extends Component {\n  static propTypes = { fn: propTypes.func };\n\n  render() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n    return (\n      <button className=\"Button\" type=\"button\" onClick={(e) => this.props.fn()}>\n        Load more\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport propTypes from \"prop-types\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  static propTypes = { closeFn: propTypes.func, loader: propTypes.func };\n\n  componentDidMount() {\n    console.log(\"Modal componentdidMount\");\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.closeFn();\n    }\n  };\n  handleBackdrope = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.closeFn();\n    }\n  };\n\n  componentWillUnmount() {\n    console.log(\" Modal componentWillUnmount\");\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdrope}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\nexport default Modal;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Button from \"./Button/Button\";\nimport Modal from \"./Modal/Modal\";\n\nconst apiKey = \"20461350-36527ad634bc0878b1b72e118\";\n\nclass App extends Component {\n  state = {\n    searchWords: \"\",\n    images: [],\n    showModal: false,\n    modalImage: \"\",\n    showLoader: false,\n    currentPage: 1,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  pushImagesToState = (response) => {\n    const imagesFromResponse = response.data.hits;\n    let newSearchArray = [];\n    newSearchArray = [...this.state.images, ...imagesFromResponse];\n    this.setState(({ images }) => ({ images: newSearchArray }));\n  };\n  setModalImage = (linkImg) => {\n    return this.setState(({ modalImage }) => ({ modalImage: linkImg }));\n  };\n  openLargeImage = (linkImg) => {\n    this.setModalImage(linkImg);\n    this.toggleModal();\n  };\n\n  loaderToggle = (bool) => {\n    return this.setState(({ showLoader }) => ({ showLoader: bool }));\n  };\n\n  getImages(words, page) {\n    this.loaderToggle(true);\n    axios\n      .get(\n        `https://pixabay.com/api/?q=${words}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\n      )\n      .then((response) => {\n        this.pushImagesToState(response);\n        this.loaderToggle(false);\n        this.setState((prevState) => ({\n          currentPage: prevState.currentPage + 1,\n        }));\n      });\n  }\n\n  searchFormSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      searchWords: \"\",\n      images: [],\n      showModal: false,\n      modalImage: \"\",\n      currentPage: 1,\n    });\n    const searchWordsValue = event.target[1].value;\n\n    this.setState({ searchWords: searchWordsValue });\n    const page = 1;\n    this.getImages(searchWordsValue, page);\n    //event.target.reset();\n  };\n\n  loadMoreFn = () => {\n    this.loaderToggle(true);\n    this.getImages(this.state.searchWords, this.state.currentPage);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.showModal && (\n          <Modal closeFn={this.toggleModal} loader={this.loaderToggle}>\n            <img src={this.state.modalImage} alt=\"modal\" />\n          </Modal>\n        )}\n        <Searchbar onSubmit={this.searchFormSubmit} />\n\n        {this.state.searchWords !== \"\" && (\n          <ImageGallery\n            loader={this.loaderToggle}\n            imagesArray={this.state.images}\n            modalFn={this.openLargeImage}\n          ></ImageGallery>\n        )}\n        {this.state.showLoader && (\n          <Loader\n            className=\"spin\"\n            type=\"Bars\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        )}\n        {this.state.searchWords !== \"\" && <Button fn={this.loadMoreFn} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/styles.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}